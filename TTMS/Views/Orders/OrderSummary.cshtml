@model TTMS.Models.OrderVM

<script>
    function printDiv(divName) {
        var printContents = document.getElementById(divName).innerHTML;
        var originalContents = document.body.innerHTML;

        document.body.innerHTML = printContents;

        window.print();

        document.body.innerHTML = originalContents;
    }
</script>
<div>
    @{
        if (ViewBag.NewOrder == true)
        {
            <div class="text-success">
                <h3>Order Placed Successfully. Order No : @Html.DisplayFor(model => model.order.OrderNo)</h3>
            </div>
        }
    }
    <div class="container" id="printableArea">
        <div class="row">
            <div class="col-xs-12">
                <div class="invoice-title">
                    <h2>Invoice</h2><h3 class="pull-right">Order # @Html.DisplayFor(model => model.order.OrderNo)</h3>
                </div>
                <hr>
                <div class="row">
                    <div class="col-xs-6">
                        <address>
                            <strong>Billed To:</strong><br>
                            <b>@Html.DisplayFor(model => model.customer.CustomerOrganizationName)</b><br>
                            @Html.DisplayFor(model => model.customer.ContactPersonName)<br>
                            @Html.DisplayFor(model => model.customer.ContactNo), @Html.DisplayFor(model => model.customer.AlternateContactNo)
                        </address>
                    </div>
                    <div class="col-xs-6 text-right">
                        <address>
                            <strong>Delivery Address:</strong><br>
                            @Html.DisplayFor(model => model.address.Name)<br>
                            @Html.DisplayFor(model => model.address.Address1)<br>
                            @Html.DisplayFor(model => model.address.Address2)<br>
                            @Html.DisplayFor(model => model.address.City)<br>
                            @Html.DisplayFor(model => model.address.State), @Html.DisplayFor(model => model.address.Country),@Html.DisplayFor(model => model.address.Zip)
                        </address>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-6">
                        <address>

                        </address>
                    </div>
                    <div class="col-xs-6 text-right">
                        <address>
                            <strong>Payment Details:</strong><br>
                            Total    : @Html.DisplayFor(model => model.order.TotalPrice)<br />
                            Discount : @Html.DisplayFor(model => model.order.Discount)<br />
                            Advance  : @Html.DisplayFor(model => model.order.Advance)<br>
                            @{
                                double total = (double)Model.order.TotalPrice - (double)Model.order.Discount;
                                total = total - (double)Model.order.Advance;
                            }
                            Due Amount :<b> @total.ToString() </b><br>
                        </address>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>Order summary</strong></h3>
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-condensed">
                                <thead>
                                    <tr>
                                        <td><strong>Image</strong></td>
                                        <td class="text-center"><strong>Product name</strong></td>
                                        <td class="text-center"><strong>Quantity</strong></td>
                                        <td class="text-right"><strong>Price</strong></td>
                                        <td class="text-right"><strong>Total</strong></td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int i = 0;
                                        foreach (var item in Model.orderItems)
                                        {
                                            double subtotoal = (double)@item.Price * (int)@item.Quantity;
                                            <tr>
                                                <td><img id="img1" src="~\@Url.Content(@item.saleproduct.ImagePath)" height="100" width="75" /></td>
                                                <td class="text-center">@item.saleproduct.Name</td>
                                                <td class="text-center">@item.Quantity</td>
                                                <td class="text-right">₹ @item.Price</td>
                                                <td class="text-right">₹ @subtotoal.ToString()</td>
                                            </tr>
                                            i++;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Back to List", "Index")
    <input type="button" value="Print" onclick="printDiv('printableArea')" class="ui-icon-print" />
</p>
