@model TTMS.Models.OrderVM
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
    $(function () {
        $("#customer_CustomerOrganizationName").autocomplete({
            source: function (request, response) {
                var id = $('#customer_CustomerOrganizationName').val();
                var ServiceUrl = "/Orders/GetCustomers?strCust=" + id;
                $.ajax({
                    type: 'GET',
                    url: ServiceUrl,
                    async: true,
                    cache: false,
                    crossDomain: true,
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    error: function (xhr, err) {
                        alert("No Match");
                    },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return {
                                label: item.Name,
                                val: item.Value
                            }
                        }))
                    } 
                });
            },
            select: function (e, i) {
                $("#customer_ID").val(i.item.val);
                var ServiceUrl = "/Orders/GetCustomersAddress?id=" + i.item.val;
                $.ajax({
                    type: 'GET',
                    url: ServiceUrl,
                    async: true,
                    cache: false,
                    crossDomain: true,
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    error: function (xhr, err) {
                        alert("No Match");
                    },
                    success: function (result, status) {
                        $('#customer_ContactPersonName').val(result[0].cpName);
                        $('#customer_ContactNo').val(result[0].cNo)
                        $('#customer_AlternateContactNo').val(result[0].acNo)
                        $('#address_ID').val(result[0].ID)
                        $('#address_Name').val(result[0].Name)
                        $('#address_Address1').val(result[0].Address1)
                        $('#address_Address2').val(result[0].Address2)
                        $('#address_City').val(result[0].City)
                        $('#address_State').val(result[0].State)
                        $('#address_Country').val(result[0].Country)
                        $('#address_Zip').val(result[0].Zip)
                        $('#address_AddressType').val(result[0].AddressType)
                    }
                });
            }
        });
    });
</script>
@using (Html.BeginForm("Create", "Orders", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h4>Order Details</h4>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.order.TotalPrice, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.order.TotalPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.TotalPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.order.GST, htmlAttributes: new { @class = "control-label col-md-3", @readonly = "true" })
            <div class="col-sm-1">
                @Html.EditorFor(model => model.order.GST, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.GST, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-8">% Included in Total Price</div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.order.Discount, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.order.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.Discount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.order.GrandTotalWithTax, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.order.GrandTotalWithTax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.GrandTotalWithTax, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.order.Advance, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.order.Advance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.Advance, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Expected Delivery Date", htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.order.DeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.DeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.order.Remarks, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.order.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.order.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Customer Details</h4>
        <hr />
        @Html.HiddenFor(model=>model.customer.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.customer.CustomerOrganizationName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.customer.CustomerOrganizationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customer.CustomerOrganizationName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactPersonName, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.customer.ContactPersonName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customer.ContactPersonName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.customer.ContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.customer.ContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customer.ContactNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.customer.AlternateContactNo, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.customer.AlternateContactNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.customer.AlternateContactNo, "", new { @class = "text-danger" })
            </div>
        </div>
        <h4>Address</h4>
        <hr />
        @Html.HiddenFor(model=> model.address.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.address.Name, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.address.Address1, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.Address1, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.address.Address2, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.Address2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.address.City, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address.State, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.State, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address.Country, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address.Zip, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.Zip, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.Zip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address.AddressType, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.address.AddressType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.address.AddressType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
