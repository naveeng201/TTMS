@model TTMS.Models.PurchaseOrderVM
 

<style>
    hr.style3 {
        border-top: 1px dashed #8c8b8b;
    }
</style>
<script>
    $(document).ready(function () {
        var oTable = $('#myDataTable').dataTable({

        });
    });
    $(document).ready(function () {
        $('.add-button').click(function (e) {
            // validate
            var department = $("#msg_id");
            var msg = "Please select Product";
            if ($('#ProductID').val() == "") {
                department.text(msg);
                e.preventDefault();
                return false;
            }
            else {
                department.text("");
            }
            var productID = $('#ProductID').val();
            //validate if product is already exist in table

            var count = $("tr.contacts-record").length + 1;
            var template = $('.contacts-record-template').clone();
            var productName = $('#ProductID').find('option:selected').text();
            var ProductType = $("#ProductType").val();
            var Quantity = $("#Quantity").val();
            template.find('input[type=text]').val(null);
            template.find('input[type=checkbox]').prop('checked', false);
            $.each(template.find('#ProductID1'), function () {
                var name = $(this).attr('name');
                name = name.replace('0', count);
                $(this).attr('name', name);
                $(this).val(productID);
            });
            $.each(template.find('#ProductName1'), function () {
                var name = $(this).attr('name');
                name = name.replace('0', count);
                $(this).attr('name', name);
                $(this).val(productName);
            });
            $.each(template.find('#ProductType1'), function () {
                var name = $(this).attr('name');
                name = name.replace('0', count);
                $(this).attr('name', name);
                $(this).val(ProductType);
            });
            $.each(template.find('#Quantity1'), function () {
                var name = $(this).attr('name');
                name = name.replace('0', count);
                $(this).attr('name', name);
                $(this).val(Quantity);
            });

            template.removeClass('contacts-record-template')
                                               .addClass('contacts-record').show();

            // clear controls
            $('#ProductID').val(null);
            $("#ProductType").val(null);
            $("#ProductShorName").val(null);
            $("#Quantity").val(null);
            $('.display').append(template);
        });
    });

    jQuery(document).ready(function () {
        $("#ProductID").change(function () {
            var id = $('#ProductID').val();
            var ServiceUrl = "/PurchaseOrders/GetProdectDetails?id=" + id;
            var content = '';
            $.support.cors = true;
            $.ajax({
                type: 'GET',
                url: ServiceUrl,
                async: true,
                cache: false,
                crossDomain: true,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                error: function (xhr, err) {
                    alert("Error");
                },
                success: function (result, status) {
                    $('#ProductShorName').val(result[0].ShorName);
                    $('#ProductType').val(result[0].Price)
                }
            });
        });
    });
    jQuery(document).ready(function () {
        if ($('#purchaseOrder_PurchaseOrderNo').val() == "") {
            var ServiceUrl = "/PurchaseOrders/GetPurchaseOrderNo";
            var content = '';
            $.support.cors = true;
            $.ajax({
                type: 'GET',
                url: ServiceUrl,
                async: true,
                cache: false,
                crossDomain: true,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                error: function (xhr, err) {
                    alert("Error");
                },
                success: function (result, status) {
                    $('#purchaseOrder_PurchaseOrderNo').val(result);
                }
            });
        }
    });
    function validateSave() {
        var department = $("#msg_SupplierId");
        var msg = "Please select Supplier";
        var rowCount = $('#myDataTable tr').length;
        if ($('#purchaseOrder_SupplierID').val() == "") {
            department.text(msg);
            return false;
        }
        else if (rowCount == 2) {
            department.text("");
            alert("Plesae add Products");
            return false
        }
        else {
            department.text("");
            return true;
        }
    }
</script>
@using (Html.BeginForm("AddProductDetails", "PurchaseOrders", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PurchaseOrder</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="col-sm-6">
                <div>
                    @Html.HiddenFor(model => model.purchaseOrder.ID)
                </div>
                <div class="form-group">
                    <div class="col-md-4 control-label col-md-3">Purchase Order No</div>
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.purchaseOrder.PurchaseOrderNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.purchaseOrder.PurchaseOrderNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <div class="col-md-4 control-label col-md-3">Supplier</div>
                    <div class="col-md-5">
                        @Html.DropDownListFor(model => model.purchaseOrder.SupplierID, new SelectList(ViewBag.Suppliers, "ID", "OrganizationName"), "Select Supplier", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.purchaseOrder.SupplierID, "", new { @class = "text-danger" })
                        <div style="color:red;" id="msg_SupplierId"></div>
                    </div>
                </div>
            </div>
        </div>
        <hr/>
        <div class="row">
            <div class="col-sm-3">
                @Html.DropDownList("ProductID", null, "Select Product", htmlAttributes: new { @class = "form-control input-sm" })
                <div style="color:red;" id="msg_id"></div>
            </div>
            <div class="col-sm-3">
                  @Html.TextBox("ProductShorName", null, htmlAttributes: new { @class = "form-control input-sm", @readonly = true, placeholder = "Short Name" })
            </div>
            <div class="col-sm-3">
                  @Html.TextBox("ProductType", null, htmlAttributes: new { @class = "form-control input-sm", @readonly = true, placeholder = "Product Type" })
            </div>
            <div class="col-sm-1">
                  @Html.TextBox("Quantity", null, htmlAttributes: new { @class = "form-control input-sm", placeholder = "Quantity" })
            </div>
            <div class="col-sm-1">
                 <input type="button" id="addRow" value="Add" class="add-button btn-success-outline" />
            </div>
        </div>
        <table id="myDataTable" class="display">
            <thead>
                <tr>
                    <th>ProductID</th>
                    <th>Product Name</th>
                    <th>Product Type</th>
                    <th>Quantity</th>
                </tr>
            </thead>
            <tbody>
                @{
                    //To make unique Id
                    int i = 0;
                    foreach (var item in Model._orderDetail)
                    {
                        if (i == 0)
                        {
                            <tr class="contacts-record-template" style="display:none">
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].ProductID, new { @id = "ProductID1" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].ProductName, new { @id = "ProductName1" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].ProductType, new { @id = "ProductType1" })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].Quantity, new { @id = "Quantity1" })
                                </td>
                            </tr>
                        }
                        else
                        {
                            <tr class="contacts-record">
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].ProductID, new { @id = "ProductID_" + i })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].ProductName, new { @id = "ItemCode_" + i })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].ProductType, new { @id = "ProductName_" + i })
                                </td>
                                <td>
                                    @Html.TextBoxFor(model => model._orderDetail[i].Quantity, new { @id = "Qty_" + i })
                                </td>
                            </tr>

                        }
                        i++;
                    }
                }
            </tbody>
        </table>
 
        <div class="form-horizontal">
            <div class="col-md-5"></div>
            <div class="col-md-1">
                @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new { @class = "btn btn-default" })
            </div>
            <div class="col-md-1">
                <input type="submit" value="Save" onclick="return validateSave()" class="btn btn-success" />
            </div>
        </div>
    </div>
 }
<br />




